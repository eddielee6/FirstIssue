
<p>I should have seen the writing on the wall. Back in February 2008, when I first joined Twitter (admittedly, slightly late to the game), I was excited about the service. Its premise was intriguing, and it completely sucked me in. Twitter was a simple concept: micro-blogging in the guise of pithy 140-character posts.</p>

<p>Compared to Facebook, or if I go back further, MySpace, Twitter was more interesting and fun to use. Twitter eschewed most of what other social-networking services considered features in favor of its dead-simple concept. While I enjoyed using Facebook back then, and still do, Twitter was bereft of advertisements, copious images, videos, and animated gifs. Moreover, I jumped on board before the trending-topics days. It was a better experience by far.</p>

<p>In its infancy, when Twitter’s userbase started to explode, third-party app developers flocked to the service. With a reasonable API to hook into, developers were champing at the bit to make innovative apps like Loren Brichter’s Tweetie for iOS, and then later, of course, its Mac cousin. Geeks heralded the arrival of Brichter’s native iOS and Mac apps. It’s not that Twitter itself was a poor experience pre-Tweetie days — it was a matter of executing on a brilliant user interface and user experience that absolutely set the gold standard for years to come. In 2009, Tweetie deservedly won an Apple Design Award. During that time, Tweetie and The Iconfactory’s Twitterrific were the main two excellent choices for third-party Twitter clients. (Later on, this would become a saturated marketplace.) Back then, third-party clients didn’t just bring the web experience to iOS, they added to and enhanced the service in numerous ways. Polished third-party clients had cemented themselves as the premier Twitter experience on iOS.</p>

<p>What we find now as commonplace, the infamous “retweet”, was a convention that came from the userbase. Retweeting started picking up steam as a method of reposting someone else’s content to your own followers. The merits of retweeting were well-meaning, but because they weren’t initially part of the API, third-party apps started implementing it differently. <a href="http://blog.twitter.com/2009/08/project-retweet-phase-one.html">Twitter took notice</a> in 2009 and later decided to implement their own version. They went on to expose their implementation in the API for third-party developers soon after.</p>